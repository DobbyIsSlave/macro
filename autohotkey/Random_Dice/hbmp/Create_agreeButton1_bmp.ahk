; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_agreeButton1_bmp(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 2808 << !!A_IsUnicode)
B64 := "Qk06CAAAAAAAADYAAAAoAAAAIwAAABMAAAABABgAAAAAAAQIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYGBg////////////////S0tLAAAAAD1RAL//AL//AL//AL//AL//AGaIAAAACAgIv7+/////////////////////////////////////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAERERfX19////////////////S0tLAAAAAD1RAL//AL//AL//AL//AL//AGaIAAAACAgIv7+/////////////0tLSUVFRU1NTU1NTU1NTU1NTAAAAra2tra2tra2tra2tra2tra2tra2tra2tra2t2tra////////////////S0tLAAAAAD1RAL//AL//AL//AL//AL//AGaIAAAACAgIv7+/////////////wcHBFxcXAAAAAAAAAAAAAAAAAAAA////////////////////////////////////////////////////////S0tLAAAAAD1RAL//AL//AL//AL//AL//AGaIAAAACAgIv7+/////////////xMTEDQ0NAAAAACUyAD5TAD5TAAAA////////////////////////////////////////////////////9PT0S0tLAAAAAD1RAL//AL//AL//AL//AL//AGaIAAAACAgIv7+/////////////xMTEDQ0NAAAAAGmMALn3AL//AAAAy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vL0NDQ1tbW1tbW1tbWnZ2dEBAQAAAAAGmMAL//AL//AL//AL//AL//AGaIAAAACAgIv7+/////////////xMTEDQ0NAAAAAGmMAL//AL//AAAAdXV1cXFxaGhoYmJiXFxcVlZWUFBQSkpKPT09X19flZWVtbW1tbW1iYmJAQEBAAAAAHSbAL//AL//AL//AL//AL//AHOZAAAAAAAAn5+f////////+vr6k5OTAAAAAAEBAGiLAL//AL//AAAAyMjIvLy8o6Ojj4+PfHx8ampqWVlZRUVFGhoaaWlp+Pj4////////8PDwS0tLAAAAAD1RAL//AL//AL//AL//AL//AIWyAA8UAAAACgoKZWVlZmZmV1dXIyMjAAAAAAAAABkiAGmMALj2AAAA////////////////////////////+vr6wcHBv7+/////////////////S0tLAAAAAD1RAL//AL//AL//AL//ALTwAFp4AAECAAAAAAAAMDAwPj4+Pj4+LS0tCAgIAAAAAAAAAAAAAD5TAAAA////////////////////////////////8PDwysrK////////////////S0tLAAAAAD1RAL//AL//AL//AKvkAFVxAAAAAAAABQUFbW1tpaWlyMjI3t7e3t7ew8PDoKCgTExMAAAAAAAAAAAA////////+/v71tbW1dXV4eHh8vLy+/v7tbW1tbW1////////////////S0tLAAAAAD1RAL//AL//AL//AE1nAAAAAAAAMzMzubm5////////////////////////////////p6enMjIyAAAA////////xsbGkpKSeXl5WlpaMjIyPj4+QUFBi4uL////////////////S0tLAAAAACUxAJzQAL//AG+UAAgLAAAAQkJC39/f////////////////////////////////////////ycnJAAAA////////////9/f3s7OzRUVFAAAAAAAAAAAAYGBg////////////////U1NTAAAAAAAAAC49AFJuACo5AAAAGRkZyMjI////////////////////6enp6enp////////////////////AAAA////////////////////7u7uYmJiAAAAAAAAYGBg////////////////dnZ2KysrGRkZAAAAAAAAAAIDAAAAg4OD////////////////ubm5WVlZLS0tLS0tWlpazs7O////////////AAAAoqKiubm5+fn5////////////yMjICwsLAAAAYGBg/////////////////f394uLiz8/PaWlpAAAAAAAAAwMDubm5////////////zc3NNTU1AAAAAAAAAAAAAAAAU1NT8vLy////////AAAAExMTKysrfn5+////////////9/f3PDw8AAAAYGBg////////////////////////////pqamAAAAAAAAKioq5ubm////////////kJCQAAAAAAAAH0pZHEJPAAAAAAAAs7Oz////////AAAALS0tSEhIlZWV////////////6+vrMDAwAAAAYGBg////////////////////////////oKCgAAAAAAAALCws6enp////////////jIyMAAAAAQMDJFdoIlJiAAAAAAAAr6+v////////AAAA6urq////////////////////paWlAAAAAAAAYGBg////////////////39/fvb29rq6uY2NjAAAAAAAAFBQU0NDQ////////////tLS0Dg4OAAAAAAAAAAAAAAAALCws2NjY////////AAAA////////////////////q6urKCgoAAAAAAAAYGBg////////////////YmJiBAQEAAAAAAAAAAAAAAAAAAAAo6Oj////////////////eHh4CAgIAAAAAAAADQ0NkZGR////////////AAAA"
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}