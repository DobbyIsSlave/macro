; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_typhoonUpgradeButton1_bmp(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 2240 << !!A_IsUnicode)
B64 := "Qk2OBgAAAAAAADYAAAAoAAAAEgAAAB0AAAABABgAAAAAAFgGAAAAAAAAAAAAAAAAAAAAAAAAHBoOzcSf8u/Sz8B2WFQtTEwkMjIPFRUAFBQCTEw88vLlUVFAKyoXOjcgW0sXa1snY1IeMC0QAAAEBAM8NSbk4NF4ajAmJhE1NRUMDAAaGg9kZFN6emlCQjH09PTAwLspKR0wIQQxIgQiEgQODgwAAB8fHwICAWdeQ3xuMCoqCA8PASIiGaGhn9fXxxcXBltbSvz8/P39/cLCvExLSgoKCUFAQJycnAAAMDAwFhYWBAMCHBkLFhYJAgIAsbGw+Pj43NzZOy0Oraea/////////f396enprKyod3drSEg2AAA3NzcpKSkVFRIICAMrKyO1tbP8/Pz////+/v7l5eP8/Pv////9/frY2M0qKhovMwxfZDB+rwMAACUlJTMzM5ublZaWjsjIxfz8/P////////////7+/v////n533R0WCsrCpSzAZC/AIm6Aoi7AAAABQICMzMz4eHh+/v6/f39///////////////2/v7z9/fNfX1bLCwUlLQAmbsA6voE7/wF7PwCAAA9LwkODg7Y2Nj////////////+/v78/Pz4+N7w8K7Q0JMmJhSGqgHm8wT1/AL69AH76wD87QAAAF5PIwEBAdHR0f////////////j48PDwye7urerqpkZGL3eXCOHxCfT+Bv3mAP/rA//tBvzrDQAAZFUbAAAAycnJ//////////Lk7t+h7t+c5OOu+fnRIyMLttYU9PsK+uoG/+8S/+4V/+4Y59gTAABeTxMAAADJycn///v4+Mzw4Z/u3Znu3aL5+NKhoZk0NBP5+gP69QT97xTUxxukmg7VySKjnCgAAD8wAgQEBMvLy/j4yujope3emu7dofXpz//++1JSRXF7B/X9BvbnJGZmG2x5Ob7AjnV0Ql5eGAAAIBEAFQgAyrqC796b7t6Z6dii9ujA/v79////SEg6gIoG+f4Kzr0fb29C9/j1Xl4q+Pj1gYFSAAAfDwAaDATGtXru3Znu3Zn06MH8+/n///////9ISDqBiwb5/grd0C9bWxiamoTn597///9vb0EAABIFACETC869gu7dmfTotv379f///////////4iIfmBgBvv/DNfLIG17TPr6+I2NXLKylVBbIwAAAQAAFxYOzL6D8uSh/v7h////////////////8fHwJSUQ+voG5+IfVWYj+vr66+vo5OTiVWUiAAAAAAAbGxPOwIX+/t7///3///////////////////8qKhjP0hDx8hGpri9nZyphaClgZym2sDUAABINEiMjG9vXw////f///////////////////////6urozc3BvL5BfnpEvbmEvbmIPbmIvjoIAAAKSgFfn59+/v6////////////////////////////+/v5WVlKTEwL7+4B/fME/OwF/e0H/+sIAAAaGgSDg4P9/f3///////////////////////////7///X09PM7OygyNAv1/ifw/gbv/gD09QYAACEhBIODg/39/f////////////////////////7++fr66/7+/vPz8qSknS4vEmRzDqW2BOvuAQAAloY3hnYw8/Dj///////////////////////5/Pzx9fXj///+////+vr67+/quK1yb25OPDwcAADSwWyJeCPg3c7///////////////////////n6+ub5+eH////////////v57/r2pfy7trz8/IAAMu6ZYl4I8PAsf//////////////////////+fT03vn54f///////////+7em+7dmfr24v///wAAzKs2fGobrKym////////////////////////9PTD+fnl////////+vr37t2Z9OWh//zp///9AADMqjN7aRuurqj////////////////////////u7rv5+eX////////4+OLu3Zn05qL//On9/fwAAMyqM3tpG66uqP///////////////////////+7uu/n55f////////j44e7dmfTmov/86f39/AAAv7BATUwiwsK4////////////////////////6+u49/fk////////8/Pd7t2Z8uGd/fnm/v37AADDtEcnJwfW1tD////////////////////////u7rv29uP////////z893u3Zny4Z39+eb+/fsAAA=="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}