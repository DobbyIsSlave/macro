; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_okButton2_bmp(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 4296 << !!A_IsUnicode)
B64 := "Qk2WDAAAAAAAADYAAAAoAAAALwAAABYAAAABABgAAAAAAGAMAAAAAAAAAAAAAAAAAAAAAAAAoaGh////////////////////8PDwQEBAAAAAAAAAAAEBAAEBAAAAAQEBenp6////////////////////9/f3g4ODHR0dAAEBDWyOGMH/AQYIAAAA0NDQ////////////////zMzMVVVVDQ0NAAAAAAAAISEhdnZ2mJiY/v7+////////////////lJSUAAAA2tra/////////////////v7+RUVFAAAAAQUHBzxQDWiKDGGABSo3AAECAAAAjo6O////////////////////tbW1OTk5AAAACEheGMH/AQYIAAAA0NDQ////////////////zMzMe3t7REREBAQEBwcHW1tbfX194eHh////////////////6+vrERERAAAA/v7+////////////////paWlAAAAAQYIDWuOFrXvGMH/GMH/FargCUddAAABCgoK5OTk////////////////7OzsS0tLAAAABSw6GMH/AQYIAAAA0NDQ////////////////2trafX19dnZ2MjIyMDAwe3t7qqqq////////////////////ZGRkAAAAAAAA////////////////////MTExAAAACEddFrTuGMH/GMH/GMH/GMH/FKPXBB4nAAAAfX19////////////////////aGhoAAAAAxkhGMH/AQYIAAAA0NDQ////////////////////sLCwfX19bGxsZ2dngoKC8PDw////////////////y8vLAgICAQQFAAAA////////////////5eXlAAAAAAIDEpLAGMH/GMH/GMH/GMH/GMH/GL/9DGKCAAAAKSkp////////////////////lpaWAAAAAhAVGMH/AQYIAAAA0NDQ////////////////////+/v7mJiYfX19fX19vr6+/////////////////v7+Nzc3AAAABzdIAAAA////////////////xsbGAAAABQoLb9DwdNr8dNr8dNr8dNr8dNr8dNr8Xa/JAQEBBAQE/v7+////////////////t7e3AAAABgwOdNr8AwYIAAAA0NDQ////////////////////////8PDwh4eHi4uL+vr6////////////////nZ2dAAAABg0PUpmxAAAA////////////////tLS0AAAABw0QdNr8dNr8dNr8dNr8dNr8dNr8dNr8b8/vAQIDAAAA7e3t////////////////wcHBAAAABQoMdNr8AwYIAAAA0NDQ////////////////////////////3Nzc0tLS////////////////7+/vFhYWAAABMFtpbs7uAAAA////////////////pqamAAAABwsNedr+edv/edv/edv/edv/edv/edv/bcPjAQICAAAA3d3d////////////////y8vLAAAABgsNedv/BAYIAAAA0NDQ////////////////////////////////////////////////////bm5uAAAAEh4kYrHOedv/AAAA////////////////pKSkAAAAAwQFab7dedv/edv/edv/edv/edv/edv/To2kAQEBDQ0N1dXV////////////////z8/PAAAACRATedv/BAYIAAAA0NDQ////////////////////////////////////////////////1dXVAwMDAQICP3GCd9f6edv/AAAA////////////////u7u7ERERAAAAQXaJedv/edv/edv/edv/edv/c9HzIT1HAAAAMDAw29vb////////////////urq6AAAADRkcedv/BAYIAAAA0NDQ////////////////////////////////////////////////enp6CQkJAQEBN2Nzd9f6edv/AAAA////////////////zc3NQEBAAAAACxMXXqrGedv/edv/edv/eNn9R4KXAgIDBgYGXl5e5eXl////////////////oqKiAAAAFysyedv/BAYIAAAA0NDQ////////////////yMjI4uLi////////////////////0tLSeXl5PDw8AgICBQkLUZKredv/AAAA////////////////3Nzcbm5uHBwcAAAADRYaV5+5eNn9c9HzQHWIBAYIAQEBMzMzfHx8+vr6////////////////iIiIAAAAJ0dSedv/BAYIAAAA0NDQ////////////////ubm5ODg4+vr6////////////////xMTEfX19cnJyKioqAAAADxsgYK7LAAAA////////////////8/Pzfn5+WlpaICAgAQEBAAEBAQMDAQICAAAABgYGLi4ua2trmJiY////////////////////T09PAAAAPGx+edv/BAYIAAAA0NDQ////////////////ubm5AAAAb29v/////////////////v7+paWlfX19ZmZmGRkZAAAAHzhBAAAA////////////////////n5+ffX19X19fOjo6JSUlHR0dHx8fKioqQ0NDa2trfX19xcXF/////////////////v7+FBQUAgMEVJmxedv/BAYIAAAA0NDQ////////////////ubm5AAAAAAAAq6ur////////////////9/f3j4+PfX19V1dXDQ0NAAEBAAAA+fn5////////////////4ODgfX19fX19eHh4ZGRkXFxcXl5eaWlpe3t7fX19ioqK+fn5////////////////xsbGAAAADhgda8Lhedv/BAYIAAAA0NDQ////////////////ubm5AAAAAAAADg4O2tra////////////////6OjogoKCfHx8RUVFBQUFAAAAoqKi////////////////////uLi4fX19fX19fX19fX19fX19fX19fX19gICA29vb////////////////////VVVVAAAAKUtYd9f6edv/BAYIAAAA0NDQ////////////////ubm5AAAAAQIDAAAALy8v9/f3////////////////0NDQfX19dnZ2MjIyAAAALi4u/Pz8/////////////////v7+wMDAgICAfX19fX19fX19fX19ioqK29vb////////////////////2dnZAwMDAwYHUJCnedv/edv/BAgJAAAA0NDQ////////////////ubm5AAAABgoMCBATAAAAY2Nj////////////////////s7OzfX19bGxsAAAAAAAAfn5+////////////////////////8/Pzy8vLurq6vr6+1dXV+/v7////////////////////+/v7NTU1AAAAIz5Ib8foedv/edv/BgwOAAAAzMzM////////////////s7OzAAAAChQXQHSHAgQFAAAAoKCg////////////////+/v7h4eHZmZmAAAAAgIDAwMDuLi4////////////////////////////////////////////////////////////////b29vAAAACA8RVJiwedr+edv/edv/ChMWAAAAv7+/////////////////pKSkAAAAEB4jbcbmLVJfAAEBCgoK09PT////////////////5+fnOTk5AAAAJkNOAAEBBgYGpqam////////////////////////////////////////////////////+/v7Y2NjAAAAAgQFPW1/c9Dyedv/edv/edv/ESAlAAAAt7e3////////////////m5ubAAAAGS00edv/ZLXTGi83AAAAJycn8vLy////////////////u7u7AAAAYrDNHzlCAAEBAQEBX19f5OTk////////////////////////////////////////wsLCNDQ0AAAAAgUGNWBvbMPjedv/edv/edv/edv/IDlCAAAAt7e3////////////////m5ubAAAAKEhUedv/eNn9Vpu1ChMXAAAAV1dX////////////////////AAAAedr+ZbXTLVFeAwYHAAAACQkJW1tbp6en6Ojo/v7+////////+vr62trakZGRQUFBAAAAAAAAChIVP3KFbcbmedv/edv/edv/edv/edv/MFhnAAABdXV1o6Ojo6Ojo6Ojo6OjY2NjAQEBOWd4edv/edv/dNL1RHuPAwcHAAAAdHR0o6Ojo6Ojo6Ojo6OjAAAA"
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}