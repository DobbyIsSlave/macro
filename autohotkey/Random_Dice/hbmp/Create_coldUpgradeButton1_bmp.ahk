; ##################################################################################
; # This #Include file was generated by Image2Include.ahk, you must not change it! #
; ##################################################################################
Create_coldUpgradeButton1_bmp(NewHandle := False) {
Static hBitmap := 0
If (NewHandle)
   hBitmap := 0
If (hBitmap)
   Return hBitmap
VarSetCapacity(B64, 2208 << !!A_IsUnicode)
B64 := "Qk12BgAAAAAAADYAAAAoAAAAGgAAABQAAAABABgAAAAAAEAGAAAAAAAAAAAAAAAAAAAAAAAA7plF75pF+7Fc/s6O/OOy//z1////////////////////////////IyMPdosLmbsA4vUA8v4E8P8C8P8C7v8A8/4FweYKibwAdpYLIiIOAADumUTwnUj8w3z+zYz74K3++/P///////////////////////8sLBlgdQebzgj7/wH//AX76wL86wD+7QD86wD27QD4/Qb0/waz1QBphwIAAO6ZRPanUv/IgfzMi/XUofTv6P///////////////////+rq6SIiEbTIA/T/BvzwBf3mAP/sBPnoC//uEf/wE//uEf7uCP7uAfz8ALDTBAAA9JpI9rBi/s2J/86N/syZ/uCv//Ll////////////////PDwna4sA8PoO/PIK/ewN/+8T/+4Y+OcgZmYiVV8YXG0f+ukc/+8V+vUE4fwRAAD1mkj2sWT/zor/z43/zJn/zJn/8eP///3///////////8jIwGp3BD7+wL+7RDi1R6vqCKzphHezSdmZiL///9PYByjoDDbzyH97A/u/wAAAPWaSPezZv/Pi//Pjf/Mmf/Mmf/syv//+v///////////yAgD+T1GP7sEI+PGVxkJqWzebKyhl5eGltbF/n5+XR0NbOzlF5eMH15GP7wEAAA9ZpI9rBq/MmW/MmW/8yZ/8yZ/ui9/f35////////////ICAP7/8S++YaWVkm////qqqDtbWQ9PTyXl4a+fn5+vrpzc2z+vr6W1sv/+4iAAD1mkj2sGr8yZb8yZb/zJn/06D+68v+/vv///////////8gIA/v/xL75hpoaCRoaCjZ2cf6+vrt7eteXhr///9qajdXVy7+/v59fVHh0AkAAPWaSPeybP7Nmv7Nmv/Mmf/mx//x5P///////////////yAgD+TkGP/sGWxsF/b48re3p3x8TYiUXE5aIvn5+XeDTlZdI////1hYLfPvGgAA9JpI9rBq/8yZ/Mub9NOx//r1////////////////////MTEhu8wA/f0Jg3ILsLea9vb29/f3k5pWVWYi////5OTk+/v70dG3X18b7v8RAAD0mkj2sGr/zJn/z57/68///vv////////////////////f39whIQ/y+gHl1ChvcB1fXx5YYB5+hiF7hCNmZiJcXCFiYhp6eijw4Rvu+AoAAPSaSPawav/Mmf/gr//35v///////////////////////////yAgDLK8Dv7uEf7tEP/uEf/uIvzrH/zrH//uIu7uIvjuGP/uEfr5CsPDAgAA85pK7rZy8c6l/+fI///5////////////////////////////////ICAPz88B8PgC++0A/OwF/+sI/+sG/+sJ/OwF+usA/PwA29sPICAMAADzmkrutnLxzqX/8NT////////////////////////////////////8/PwfHw6ZqgH1/ynu/wD0/A3y8gD//wDu/wDk7ADBwQAgIAzW1tIAAPOaSu62cvnVrP/w1P////////////////////////////////////////T09DAwICorEGp8D8jQAvPzAcfWA3J1Fjg4DUFBIfPz8v///wAA9JpI8bNt/Nmm/+vA////////////////////////////////////////////////6ennmpqRSUk5KysYSko6lZWM5ubj////////////AAD0mkjxs2300p//57n//vb///////////////////////////////////////////////////////////////////////////////////8AAPSaSPGzbfTSn/fWpf/v0P//+v///////////////////////////////////////////////////////////////////////////////wAA9ZpI9rBq/MmW/MqX/9Wi//jq///7////////////////////////////////////////////////////////////////////////////AAD1mkj2sGr8yZb8ypb+z5z76dP///v///////////////////////////////////////////////////////////////////////////8AAA=="
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", 0, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
VarSetCapacity(Dec, DecLen, 0)
If !DllCall("Crypt32.dll\CryptStringToBinary", "Ptr", &B64, "UInt", 0, "UInt", 0x01, "Ptr", &Dec, "UIntP", DecLen, "Ptr", 0, "Ptr", 0)
   Return False
; Bitmap creation adopted from "How to convert Image data (JPEG/PNG/GIF) to hBITMAP?" by SKAN
; -> http://www.autohotkey.com/board/topic/21213-how-to-convert-image-data-jpegpnggif-to-hbitmap/?p=139257
hData := DllCall("Kernel32.dll\GlobalAlloc", "UInt", 2, "UPtr", DecLen, "UPtr")
pData := DllCall("Kernel32.dll\GlobalLock", "Ptr", hData, "UPtr")
DllCall("Kernel32.dll\RtlMoveMemory", "Ptr", pData, "Ptr", &Dec, "UPtr", DecLen)
DllCall("Kernel32.dll\GlobalUnlock", "Ptr", hData)
DllCall("Ole32.dll\CreateStreamOnHGlobal", "Ptr", hData, "Int", True, "PtrP", pStream)
hGdip := DllCall("Kernel32.dll\LoadLibrary", "Str", "Gdiplus.dll", "UPtr")
VarSetCapacity(SI, 16, 0), NumPut(1, SI, 0, "UChar")
DllCall("Gdiplus.dll\GdiplusStartup", "PtrP", pToken, "Ptr", &SI, "Ptr", 0)
DllCall("Gdiplus.dll\GdipCreateBitmapFromStream",  "Ptr", pStream, "PtrP", pBitmap)
DllCall("Gdiplus.dll\GdipCreateHBITMAPFromBitmap", "Ptr", pBitmap, "PtrP", hBitmap, "UInt", 0)
DllCall("Gdiplus.dll\GdipDisposeImage", "Ptr", pBitmap)
DllCall("Gdiplus.dll\GdiplusShutdown", "Ptr", pToken)
DllCall("Kernel32.dll\FreeLibrary", "Ptr", hGdip)
DllCall(NumGet(NumGet(pStream + 0, 0, "UPtr") + (A_PtrSize * 2), 0, "UPtr"), "Ptr", pStream)
Return hBitmap
}